version: 2
jobs:
  install-dependencies:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
      - run:
          name: Setup Dependencies
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  analyze:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
      - run:
          name: Analyze code
          command: npm run eslint:ci
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
      - run:
          name: Setup Code Climate test reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Test
          command: |
            ./cc-test-reporter before-build
            npm run test:ci 
            ./cc-test-reporter after-build -t lcov --exit-code $?
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
      - run:
          name: Build bundle
          command: |
            npm run build
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t buildusershc/shc-api:$TAG .     
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push buildusershc/shc-api:$TAG

workflows:
  version: 2
  install_and_test:
    jobs:
      - install-dependencies
      - analyze:
          requires:
            - install-dependencies
          # filters:
          #   branches:
          #     only: master
      - test:
          requires:
            - analyze
      - build:
          requires:
            - test
          filters:
            branches:
              only: master